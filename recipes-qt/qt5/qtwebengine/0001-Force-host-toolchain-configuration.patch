From 8a07ea88666132e3ca944d0d5784235420c3d382 Mon Sep 17 00:00:00 2001
From: Samuli Piippo <samuli.piippo@qt.io>
Date: Wed, 15 Mar 2017 13:53:28 +0200
Subject: [PATCH] Force host toolchain configuration

Force gcc/g++ to be used for parts using host toolchain, since
the option(host_build) does not work in yocto builds.

Don't use QT_ARCH for the host architecture, since that's always
the target architecture in bitbake builds, instead ask specifically
for the qmakes's host architecture.

Upstream-Status: Inappropriate [OE specific]
Signed-off-by: Samuli Piippo <samuli.piippo@qt.io>
---
 src/buildtools/configure_host.pro | 14 +++++++-------
 src/buildtools/gn.pro             |  4 ++--
 src/core/config/linux.pri         |  2 +-
 3 files changed, 10 insertions(+), 10 deletions(-)

diff --git a/src/buildtools/configure_host.pro b/src/buildtools/configure_host.pro
index dd0d3e3..6312c86 100644
--- a/src/buildtools/configure_host.pro
+++ b/src/buildtools/configure_host.pro
@@ -4,7 +4,7 @@ TEMPLATE = aux
 # Pick up the host toolchain
 option(host_build)
 
-GN_HOST_CPU = $$gnArch($$QT_ARCH)
+GN_HOST_CPU = $$gnArch($$QMAKE_HOST.arch)
 !isEmpty(QT_TARGET_ARCH): GN_TARGET_CPU = $$gnArch($$QT_TARGET_ARCH)
 else: GN_TARGET_CPU = $$GN_HOST_CPU
 GN_OS = $$gnOS()
@@ -31,9 +31,9 @@ GN_CONTENTS = \
 "import(\"//build/config/sysroot.gni\")" \
 "import(\"//build/toolchain/gcc_toolchain.gni\")" \
 "gcc_toolchain(\"host\") {" \
-"  cc = \"$$which($$QMAKE_CC)\" " \
-"  cxx = \"$$which($$QMAKE_CXX)\" " \
-"  ld = \"$$which($$QMAKE_LINK)\" " \
+"  cc = \"$$which($$CC_host)\" " \
+"  cxx = \"$$which($$CXX_host)\" " \
+"  ld = \"$$which($$CXX_host)\" " \
 "  ar = \"$$which(ar)\" " \
 "  nm = \"$$which(nm)\" " \
 "  extra_cppflags = \"$$GN_HOST_EXTRA_CPPFLAGS\" " \
@@ -45,9 +45,9 @@ GN_CONTENTS = \
 "  } " \
 "}" \
 "gcc_toolchain(\"v8_snapshot\") {" \
-"  cc = \"$$which($$QMAKE_CC)\" " \
-"  cxx = \"$$which($$QMAKE_CXX)\" " \
-"  ld = \"$$which($$QMAKE_LINK)\" " \
+"  cc = \"$$which($$CC_host)\" " \
+"  cxx = \"$$which($$CXX_host)\" " \
+"  ld = \"$$which($$CXX_host)\" " \
 "  ar = \"$$which(ar)\" " \
 "  nm = \"$$which(nm)\" " \
 "  toolchain_args = { " \
diff --git a/src/buildtools/gn.pro b/src/buildtools/gn.pro
index 7766af0..9d578c8 100644
--- a/src/buildtools/gn.pro
+++ b/src/buildtools/gn.pro
@@ -19,8 +19,8 @@ build_pass|!debug_and_release {
             gn_bootstrap = $$system_path($$absolute_path(gn/build/gen.py, $$src_3rd_party_dir))
 
             gn_configure = $$system_quote($$gn_bootstrap) --no-last-commit-position --out-path $$out_path \
-                           --cc \"$$which($$QMAKE_CC)\" --cxx \"$$which($$QMAKE_CXX)\" \
-                           --ld \"$$which($$QMAKE_LINK)\" --ar \"$$which(ar)\"
+                           --cc \"$$which($$CC_host)\" --cxx \"$$which($$CXX_host)\" \
+                           --ld \"$$which($$CXX_host)\" --ar \"$$which(ar)\"
             message($$gn_configure)
             !system("$$pythonPathForSystem() $$gn_configure") {
                 error("GN generation error!")
diff --git a/src/core/config/linux.pri b/src/core/config/linux.pri
index 04c9eca..c48fa06 100644
--- a/src/core/config/linux.pri
+++ b/src/core/config/linux.pri
@@ -115,7 +115,7 @@ contains(QT_ARCH, "mips") {
 
 host_build {
     gn_args += custom_toolchain=\"$$QTWEBENGINE_OUT_ROOT/src/toolchain:host\"
-    GN_HOST_CPU = $$gnArch($$QT_ARCH)
+    GN_HOST_CPU = $$gnArch($$QMAKE_HOST.arch)
     gn_args += host_cpu=\"$$GN_HOST_CPU\"
     # Don't bother trying to use system libraries in this case
     gn_args += use_glib=false
